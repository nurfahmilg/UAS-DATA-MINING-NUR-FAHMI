# -*- coding: utf-8 -*-
"""Clustering - Pizza Dataset 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WF60GRBRnFXyfRiUdbzbXnYA3UlXm0xZ
"""

import pandas as pd
from sklearn.preprocessing import MinMaxScaler
data = pd.read_csv('Pizza_Restaurants_and_the_Pizza_They_Sell.csv')
data.head()

import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler

data_clus2 = data.iloc[:,16:18]
data_clus2.head()

plt.scatter(data_clus2.iloc[:,0],data_clus2.iloc[:,1],c='red')
plt.xlabel('Price Min')
plt.ylabel('Price Max')
plt.show()

clus_array2 = np.array(data_clus2)
print(clus_array2)

scaler = MinMaxScaler()
data_scaled = scaler.fit_transform(clus_array2)
data_scaled

distortions = []
K = range (1,10)
for k in K:
  kmeanModel = KMeans(n_clusters=k)
  kmeanModel.fit(data_scaled)
  distortions.append(kmeanModel.inertia_)

plt.figure(figsize=(10,6))
plt.plot(K, distortions, 'bx-')
plt.xlabel('k')
plt.ylabel('Distortion')
plt.title('The Elbow Method showing the optimal k')
plt.show()

kmeanModel = KMeans(n_clusters=2)
kmeanModel.fit(data_scaled)
# KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,
#        n_clusters=5, n_init=10,n_jobs=None,precompute_distances='auto',
#        random_state=None, tol=0.0001, verbose=0)
print(kmeanModel.cluster_centers_)

plt.scatter(data_scaled[:,0], data_scaled[:,1], s=50, c='black', marker='o', alpha=1)
centers = kmeanModel.cluster_centers_
plt.scatter(centers[:,0], centers[:,1], c='red', s=50, alpha=1, marker='o');
plt.title('K-Means Centroid')
plt.xlabel('Price Min')
plt.ylabel('Price Max')
plt.show()

y_kmeans = kmeanModel.predict(data_scaled)

plt.scatter(data_scaled[:,0], data_scaled[:,1], c=y_kmeans, s=50, cmap='viridis')

centers = kmeanModel.cluster_centers_
plt.scatter(centers[:, 0], centers[:,1], c='red', s=200, alpha=0.5);
plt.xlabel('Price Min')
plt.ylabel('Price Max')
plt.show()

result = pd.DataFrame(data = y_kmeans)
result.columns = ['cluster']
result.head()

output = pd.concat([data,result], axis=1)
output.head()

import seaborn as sns
sns.scatterplot(x=output.iloc[:,16], y=output.iloc[:,17], hue=output.iloc[:,19],
                data=output, palette='viridis', s=100, legend='full');
plt.legend(loc='center right', fontsize='10');